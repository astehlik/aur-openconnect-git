name: Update OpenConnect Package

on:
  # Weekly run a 03:23
  schedule:
    - cron: '23 3 * * 3'
  # Allow manual triggering
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      update_needed: ${{ steps.check-update.outputs.update_needed }}
      latest_hash: ${{ steps.gitlab-hash.outputs.latest_hash }}
      current_hash: ${{ steps.current-hash.outputs.current_hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest GitLab commit hash
        id: gitlab-hash
        run: |
          # Fetch the latest commit hash from GitLab API
          LATEST_HASH=$(curl -s "https://gitlab.com/api/v4/projects/openconnect%2Fopenconnect/repository/commits/master" | jq -r '.id')
          echo "latest_hash=$LATEST_HASH" >> $GITHUB_OUTPUT
          echo "Latest GitLab hash: $LATEST_HASH"

      - name: Get current build commit hash
        id: current-hash
        run: |
          # Read current commit hash from _commithash variable in PKGBUILD
          CURRENT_HASH=$(grep '^_commithash=' PKGBUILD | cut -d'=' -f2)
          echo "current_hash=$CURRENT_HASH" >> $GITHUB_OUTPUT
          echo "Current build commit hash from PKGBUILD: $CURRENT_HASH"

      - name: Compare hashes and decide if update is needed
        id: check-update
        run: |
          LATEST_HASH="${{ steps.gitlab-hash.outputs.latest_hash }}"
          CURRENT_HASH="${{ steps.current-hash.outputs.current_hash }}"

          echo "Comparing hashes:"
          echo "  Latest:  $LATEST_HASH"
          echo "  Current: $CURRENT_HASH"

          if [ "$LATEST_HASH" != "$CURRENT_HASH" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed - hashes differ"
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "No update needed - hashes match"
          fi

  update-package:
    runs-on: ubuntu-latest
    needs: check-for-updates
    if: needs.check-for-updates.outputs.update_needed == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update _commithash in PKGBUILD
        run: |
          # Update the _commithash variable in PKGBUILD with the latest hash
          LATEST_HASH="${{ needs.check-for-updates.outputs.latest_hash }}"
          sed -i "s/^_commithash=.*/_commithash=$LATEST_HASH/" PKGBUILD
          echo "Updated _commithash in PKGBUILD to: $LATEST_HASH"

      - name: Build the package
        uses: heyhusen/archlinux-package-action@v2

      - name: Update the .SRCINFO file
        uses: heyhusen/archlinux-package-action@v2
        with:
          flags: ''
          namcap: false
          srcinfo: true

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet PKGBUILD .SRCINFO; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in PKGBUILD or .SRCINFO"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in PKGBUILD or .SRCINFO"
            git diff --name-only PKGBUILD .SRCINFO
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Add and commit changes
          git add PKGBUILD .SRCINFO

          NEW_PKGVER=$(grep '^pkgver=' PKGBUILD | cut -d'=' -f2)
          LATEST_HASH="${{ needs.check-for-updates.outputs.latest_hash }}"
          git commit -m "Update package to version $NEW_PKGVER (commit: ${LATEST_HASH:0:7})"

          # Push changes
          git push origin main

          echo "Changes committed and pushed successfully"

      - name: Summary
        run: |
          if [ "${{ steps.check-changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ Package updated successfully"
          else
            echo "⚠️️  Build completed but no changes were made to PKGBUILD or .SRCINFO"
          fi
